name: Update index

on:
  schedule:
    - cron: '30 2 * * *'   # nightly 02:30 UTC
  workflow_dispatch:
    inputs:
      min-stars:
        description: "Minimum stars to include"
        default: '50'
        required: false
      auto-merge:
        description: "Auto-merge PR when checks pass"
        default: 'false'
        required: false
      force-inject:
        description: "Force README injection"
        default: 'false'
        required: false

permissions:
  contents: write
  pull-requests: write

jobs:
  update-data:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    env:
      BRANCH: data-update-${{ github.run_id }}
      MIN_STARS: ${{ github.event.inputs['min-stars'] || 50 }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install -e .
      - name: Run extended scraper & scoring
        run: |
          python scripts/scrape_repos.py --min-stars $MIN_STARS --output data/repos.json
          python scripts/score_metrics.py data/repos.json
      - name: Validate data
        run: python -m agentic_index_cli.validate data/repos.json
      - name: Rank repositories
        run: python -m agentic_index_cli.ranker data/repos.json
      - name: Run tests
        env:
          CI_OFFLINE: '1'
        run: pytest -q
      - name: Check for updated index
        id: detect-changes
        shell: bash
        run: |
          if [ "${{ inputs.force-inject }}" = "true" ]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          elif git diff --quiet --exit-code \
                data/top100.md data/repos.json README.md; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
          else
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi
      - run: git status --short
        if: steps.detect-changes.outputs.changed == 'true'
      - name: Create refresh PR
        if: steps.detect-changes.outputs.changed == 'true'
        id: createpr
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "chore(data): nightly agent index refresh"
          branch: ${{ env.BRANCH }}
          base: main
          title: "chore(data): nightly agent index refresh"
          body: "Automated data scrape, rank, and README injection."
          delete-branch: true
      - name: Enable auto-merge
        uses: pascalgn/automerge-action@v0.15.6
        if: ${{ inputs.auto-merge == 'true' }}
        with:
          github_token: ${{ github.token }}
          pull_request: ${{ steps.createpr.outputs.pull-request-number }}
          merge_method: squash
